@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js">

<div id="uploadSection" style="margin: 50px">
    <form method="post" enctype="multipart/form-data">
        <div class="form-row" style="margin:50px">
            <h1 class="display-4" style="margin: auto">ING transaction report</h1>
        </div>

        <div id="results">
            <canvas id="myChart" height="300"></canvas>
        </div>

        <div class="alert-danger" id="alertError" style="display: none">
            Error
        </div>

        <div class="form-row" id="uploadButton">
            <label class="btn btn-dark" style="margin: 0 auto">
                <i class="fa fa-cloud-upload" id="uploadButtonIcon" style="margin-right: 5px"></i><span id="uploadButtonText">Select report</span><input type="file" id="file_field" asp-for="Upload" hidden>
                <div class="progress" id="progressBarContainer" style="width: inherit; display: none">
                    <div class="progress-bar" id="progressBar" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style="height:auto"></div>
                </div>
            </label>
        </div>
    </form>
</div>


<script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript" src="~/lib/Chart.js/Chart.js"></script>
<script>
    var ctx = document.getElementById('myChart').getContext('2d');

    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['5 aug', '6 aug', '7 aug', '8 aug', '9 aug', '10 aug'],
            datasets: [{
                label: 'Transactions',
                data: [211.1, 301, 5.01, 7, 15.2, 90],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    type: 'category'
                }]
            }
        }
    });

    $('#file_field').on('change', function (event) {
        event.preventDefault();
        if ($('#file_field').get(0).files.length === 0) {
            return;
        }
        else {
            $.ajax({
                url: '/',
                type: 'POST',
                data: new FormData($('form')[0]),
                cache: false,
                contentType: false,
                processData: false,

                success: function (data) {
                    $('#uploadButtonText').empty().append('Select report');
                    $('#uploadButtonIcon').removeClass().addClass('fa').addClass('fa-cloud-upload');
                    $('#progressBarContainer').hide();
                    $('#results').show();
                    SetFields(data);
                },
                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    $('#uploadButtonText').empty().append('Try again!');
                    $('#uploadButtonIcon').removeClass().addClass('fa').addClass('fa-exclamation-triangle');
                    $('#progressBarContainer').hide();
                },
                xhr: function () {
                    var progXHR = $.ajaxSettings.xhr();
                    if (progXHR.upload) {
                        progXHR.upload.addEventListener('progress', function (e) {
                            if (e.lengthComputable) {
                                var prog = Math.floor(e.loaded / e.total * 100);
                                $('#progressBarContainer').show();
                                $('#progressBar').css('width', prog + '%').attr('aria-valuenow', prog);
                            }
                        }, false);
                    }
                    return progXHR;
                }
            });
        }
    });

    function SetFields(data) {
        var monthlyTransactions = new Array();
        var transactions = JSON.parse(data);

        $.each(transactions, function (index, value) {
            monthlyTransactions.push(value);
        });

        var dateArray = new Array();
        var debitArray = new Array();

        const monthNames = ["Ian", "Feb", "Mar", "Apr", "Mai", "Iun",
            "Iul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];

        $.each(monthlyTransactions[monthlyTransactions.length - 1], function (index, value) {
            var tempDate = new Date(value.Date);
            dateArray.push(tempDate.getDate() + ' ' + monthNames[tempDate.getMonth()]);
            debitArray.push(value.Debit);
        });

        myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dateArray,
                datasets: [{
                    label: 'Total zi',
                    data: debitArray,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                }
            }
        });
    }
</script>